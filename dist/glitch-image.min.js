!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.GlitchImage=e():t.GlitchImage=e()}(self,(function(){return function(){"use strict";var t={};const e={rOffset:0,bOffset:0,gOffset:0},i=200;class s{_canvas;_src;_auto;_noise;_background;_ctx;_img;_prevTime;_glitchLinePos;constructor({canvas:t,src:e,disabledNoise:i=!1,auto:s=!1,background:a="#1a191c"}){this._canvas=t,this._src=e,this._auto=s,this._noise=i,this._ctx=this._canvas.getContext("2d"),this._background=a,this._img=null,this._prevTime=0,this._glitchLinePos=this.setGlitchLinePos()}loadImg(t){return new Promise((e=>{const i=new Image;i.onload=()=>e(i),i.src=t}))}fetchSvg(){return new Promise((t=>{const e=new XMLHttpRequest;e.open("GET",this._src),e.responseType="document",e.onload=()=>{if(!(e.responseXML instanceof Document))throw Error();t(e.responseXML.documentElement)},e.send()}))}loadSvg(t){return new Promise((e=>{const i=new Image;i.onload=()=>e(i);const s=(new XMLSerializer).serializeToString(t);i.src=`data:image/svg+xml;base64,${window.btoa(unescape(encodeURIComponent(s)))}`}))}getExtension(t){const e=t.split(".").pop();if("string"!=typeof e)throw new Error("extension is string but undefined");return e}createRgbImage(t,i,s=e){const{rOffset:a,gOffset:n,bOffset:h}=s,o=this._canvas,c=this._ctx;c.drawImage(this._img,t,i,o.width,o.height);const r=c.getImageData(t,i,o.width,o.height).data,d=new Uint8ClampedArray(r);for(let t=0;t<r.length;t+=4)d[t+0+4*a]=r[t+0],d[t+1+4*n]=r[t+1],d[t+2+4*h]=r[t+2];return new ImageData(d,o.width,o.height)}async initialized(){if("svg"===this.getExtension(this._src)){const t=await this.fetchSvg();this._img=await this.loadSvg(t)}else this._img=await this.loadImg(this._src);this.rect()}setCanvasSize=()=>{const t=this._img;if(this._auto){const e=this._canvas.parentElement?.parentElement;if(!(e instanceof HTMLElement))throw Error("parent element is not defined");this._canvas.width=e.clientWidth,this._canvas.height=e.clientWidth*(t.height/t.width)}else this._canvas.width=t.width,this._canvas.height=t.height};rect(t=0){this.setCanvasSize(),this._ctx.fillStyle=this._background,this._ctx.fillRect(0,0,this._canvas.width,this._canvas.height),Math.round(t)%i<this._prevTime%i&&(this._glitchLinePos=this.setGlitchLinePos());const e=this.createRgbImage(0,0,{rOffset:this._glitchLinePos.x+5,gOffset:-1*this._glitchLinePos.x,bOffset:this._glitchLinePos.x});if(this._ctx.putImageData(e,0,0),this._noise){const t=Math.floor(Math.random()*(this._canvas.height/10));for(let e=0;e<t;e++)this.createNoise(this._canvas.width*Math.random(),this._canvas.height*Math.random())}if(Math.round(t)%i<=i){const t=Math.floor(Math.random()*this._canvas.height);for(let e=0;e<t;e++)this.createGlitchLine(this._glitchLinePos.x,e*this._glitchLinePos.y)}this._prevTime=t,requestAnimationFrame(this.rect.bind(this))}createNoise(t,e){const i=this._ctx,s=i.createImageData(Math.ceil(Math.random()*Math.floor(this._canvas.width/15)),1);for(let t=0;t<s.data.length;t+=4)s.data[t+0]=Math.floor(255*Math.random()),s.data[t+1]=Math.floor(255*Math.random()),s.data[t+2]=Math.floor(255*Math.random()),s.data[t+3]=255;i.putImageData(s,t,e)}setGlitchLinePos(){return{x:Math.random(),y:Math.floor(5*Math.random())}}createGlitchLine(t,e){const i=this._ctx;var s=i.getImageData(t,e,1*this._canvas.width,1);const a=new Uint8ClampedArray(s.data);for(let t=0;t<a.length;t+=4)a[t+0+-40]=s.data[t+0],a[t+1+40]=s.data[t+1],a[t+2+80]=s.data[t+2];const n=new ImageData(a,s.width,s.height);i.putImageData(n,t,e)}}class a extends HTMLElement{_glitchImage;_src;_disabledNoise;_auto;_background;constructor(){super(),this._glitchImage=null,this._src=this.getAttribute("src")||"",this._disabledNoise=null!==this.getAttribute("disabled-noise"),this._auto=null!==this.getAttribute("auto"),this._background=this.getAttribute("background")||"",this.initialized()}initialized(){const t=document.createElement("canvas");this.attachShadow({mode:"open"}),this._glitchImage=new s({canvas:t,src:this._src,disabledNoise:this._disabledNoise,auto:this._auto,background:this._background}),this.shadowRoot?.append(t),this._glitchImage.initialized()}}return customElements.define("glitch-image",a),t.default}()}));